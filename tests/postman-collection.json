{
	"info": {
		"_postman_id": "d720ecf1-f362-45bf-b421-439e384acb96",
		"name": "redbrain.authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//setting variables for next calls\r",
							"//const responseJson = pm.response.json();\r",
							"const requestJson = JSON.parse(request.data);\r",
							"\r",
							"pm.environment.set(\"redbrain-uid\", requestJson.username);\r",
							"pm.environment.set(\"redbrain-pwd\", requestJson.password);\r",
							"pm.environment.set(\"redbrain-tenant\", requestJson.tenant);\r",
							"\r",
							"pm.environment.set(\"redbrain-user\", requestJson);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"redbrain-random-user\", \"usr\" + Math.floor(Math.random() * 99999));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"User\",\r\n    \"username\": \"{{redbrain-random-user}}\",\r\n    \"email\": \"test@user.com\",\r\n    \"mobile\": \"9668776655\",\r\n    \"password\": \"test123\",\r\n    \"tenant\": \"my-first-app\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/v1/users",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticate by uid & pwd",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var redbrainUser = pm.variables.get(\"redbrain-user\");\r",
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"token should be provided\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"token\");\r",
							"});\r",
							"pm.test(\"id should be provided\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"id\");\r",
							"});\r",
							"pm.test(\"username should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"username\", redbrainUser.username);\r",
							"});\r",
							"pm.test(\"firstName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"firstName\", redbrainUser.firstName);\r",
							"});\r",
							"pm.test(\"lastName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"lastName\", redbrainUser.lastName);\r",
							"});\r",
							"pm.test(\"email should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"email\", redbrainUser.email);\r",
							"});\r",
							"pm.test(\"mobile should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"mobile\", redbrainUser.mobile);\r",
							"});\r",
							"pm.test(\"tenant should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"tenant\", redbrainUser.tenant);\r",
							"});\r",
							"\r",
							"\r",
							"//setting for later usage\r",
							"response = pm.response.json();\r",
							"pm.environment.set('redbrain-access-token', response.token);\r",
							"pm.environment.set('redbrain-user-id', response.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{redbrain-uid}}\",\r\n    \"password\": \"{{redbrain-pwd}}\",\r\n    \"tenant\": \"{{redbrain-tenant}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/v1/sessions",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"v1",
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticate token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var redbrainUser = pm.variables.get(\"redbrain-user\");\r",
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"id should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"id\", pm.variables.get(\"redbrain-user-id\"));\r",
							"});\r",
							"pm.test(\"username should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"username\", redbrainUser.username);\r",
							"});\r",
							"pm.test(\"firstName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"firstName\", redbrainUser.firstName);\r",
							"});\r",
							"pm.test(\"lastName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"lastName\", redbrainUser.lastName);\r",
							"});\r",
							"pm.test(\"email should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"email\", redbrainUser.email);\r",
							"});\r",
							"pm.test(\"mobile should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"mobile\", redbrainUser.mobile);\r",
							"});\r",
							"pm.test(\"tenant should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"tenant\", redbrainUser.tenant);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{redbrain-access-token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/v1/sessions",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"v1",
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var redbrainUser = pm.variables.get(\"redbrain-user\");\r",
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"id should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"id\", pm.variables.get(\"redbrain-user-id\"));\r",
							"});\r",
							"pm.test(\"username should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"username\", redbrainUser.username);\r",
							"});\r",
							"pm.test(\"firstName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"firstName\", redbrainUser.firstName);\r",
							"});\r",
							"pm.test(\"lastName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"lastName\", redbrainUser.lastName);\r",
							"});\r",
							"pm.test(\"email should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"email\", redbrainUser.email);\r",
							"});\r",
							"pm.test(\"mobile should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"mobile\", redbrainUser.mobile);\r",
							"});\r",
							"pm.test(\"tenant should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"tenant\", redbrainUser.tenant);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{redbrain-access-token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/v1/users/{{redbrain-user-id}}",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"v1",
						"users",
						"{{redbrain-user-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{redbrain-access-token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/v1/users/{{redbrain-user-id}}",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"v1",
						"users",
						"{{redbrain-user-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get updated user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var redbrainUser = pm.variables.get(\"redbrain-user\");\r",
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"id should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"id\", pm.variables.get(\"redbrain-user-id\"));\r",
							"});\r",
							"pm.test(\"username should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"username\", redbrainUser.username);\r",
							"});\r",
							"pm.test(\"firstName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"firstName\", \"John\");\r",
							"});\r",
							"pm.test(\"lastName should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"lastName\", \"Doe\");\r",
							"});\r",
							"pm.test(\"email should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"email\", redbrainUser.email);\r",
							"});\r",
							"pm.test(\"mobile should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"mobile\", redbrainUser.mobile);\r",
							"});\r",
							"pm.test(\"tenant should match\", function () {\r",
							"    pm.expect(responseJson).to.have.property(\"tenant\", redbrainUser.tenant);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{redbrain-access-token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/v1/users/{{redbrain-user-id}}",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"v1",
						"users",
						"{{redbrain-user-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{redbrain-access-token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/v1/users",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "metrics",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{redbrain-host}}/metrics",
					"host": [
						"{{redbrain-host}}"
					],
					"path": [
						"metrics"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}